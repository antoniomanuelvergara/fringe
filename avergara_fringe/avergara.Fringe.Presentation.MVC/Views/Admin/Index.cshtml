
@model avergara.Fringe.Application.DTO.LoginDto

@{
    ViewBag.Title = "Usuarios";
}


<div class="container-fluid">

    <div class="row">
        <div class="col">
            <h4 class="mb-3">Usuarios</h4>

            @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { id = "frm-admin" }))
            {
                @Html.AntiForgeryToken();  <!--para evitar el jakeo-->
                @Html.ValidationSummary(true);<!--para las validaciones-->

                <div class="form-group">
                    @Html.LabelFor(Model => Model.Id)
                    @Html.TextBoxFor(Model => Model.Id, new { readOnly = "readOnly", @class = "form-control comment" })
                    @Html.ValidationMessageFor(Model => Model.Id, null, new { @class = "label label-danger" })
                </div>

                <div class="form-group">
                    <label for="Type">Nombre</label>
                    @Html.TextBoxFor(Model => Model.Nombre, new { @class = "form-control comment" })
                    @Html.ValidationMessageFor(Model => Model.Nombre, null, new { @class = "label label-danger" })
                </div>
                <div class="form-group">
                    <label for="Type">Apellidos</label>
                    @Html.TextBoxFor(Model => Model.Apellido, new { @class = "form-control comment" })
                    @Html.ValidationMessageFor(Model => Model.Apellido, null, new { @class = "label label-danger" })
                </div>
                <div class="form-group">
                    <label for="Type">Usuario</label>
                    @Html.TextBoxFor(Model => Model.Usuario, new { @class = "form-control comment" })
                    @Html.ValidationMessageFor(Model => Model.Usuario, null, new { @class = "label label-danger" })
                </div>
                <div class="form-group">
                    <label for="Type">Password (8 caracteres)</label>
                    @Html.TextBoxFor(Model => Model.PassWord, new { @class = "form-control comment" })
                    @Html.ValidationMessageFor(Model => Model.PassWord, null, new { @class = "label label-danger" })
                </div>

                    <div class="text-right">
                        <button type="button" class="btn btn-info" onclick="DoResetComment()">Reset</button>
                        <button data-ajax="true" data-confirm="¿Esta seguro de que desea crear Texto?" type="submit" class="btn btn-primary">Guardar</button>
                    </div>

            }

            <div class="form-group">
                <label></label>
                <input class="form-control valid" data-val-required="search" id="searchComment" name="searchComment" type="text">

            </div>

            <div class="text-right">
                <button type="button" class="btn btn-info" style="float: left;" id="send" name='send' onclick='GetIdSearchComment()'>Buscar por Tipo</button>
                @{
                    if (Model != null)
                    {
                        <button data-ajax="true" data-confirm="¿Esta seguro de que desea Eliminar Categoria?" type="button" class="btn btn-danger" style="float: right;" onclick="location.href='@Url.Action("Delete", "Fringe", new { id = Model.Id })';return false;">Eliminar</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger" style="float: right;">Eliminar</button>
                    }
                }

            </div>


        </div>

        <div class="col">
            @*<h4 class="mb-3">Enlaces</h4>*@


        </div>

    </div>
</div>


